{% extends "DtcQueueBundle::layout.html.twig" %}
{% block title %}DtcQueue - Admin - Trends{% endblock %}
{% block headcontent %}
    <style type="text/css">
        .view label {
            font-weight: normal;
            margin-right: 5px;
        }
        .view #type-spin {
            font-size: 5px;
        }

        #range-container {
            display: none;
        }

        .range input[type=range] {
            width: 100%;
        }
    </style>
{% endblock %}

{% block content %}
    {% if not record_timings %}
        <h2>Timings Not Recorded</h2>
        <p>
            Job timings are not being recorded.
        </p>
        <p>
            The following configuration entry needs to be enabled in config.yml:
        </p>
<pre>
dtc_queue:
    # ...
    record_timings: true
</pre>
    {% else %}
        <script src="{{ chartjs }}"></script>
        <div class="view">
            <label for="type">View</label>
            <select id="type">
                <option value="YEAR">By Year</option>
                <option value="MONTH">By Month</option>
                <option value="DAY">By Day</option>
                <option value="HOUR" selected>By Hour</option>
                <option value="MINUTE">By Minute</option>
            </select> <span id="type-spin"><i class="fa fa-cog fa-spin fa-3x fa-fw"></i>
            <span class="sr-only">Loading...</span></span>
        </div>
        <div>
            <canvas id="trends"></canvas>
        </div>
        <div id="range-container">
            <label for="date-adjuster">Range: </label> <input id="date-adjuster" type="range" max="23" value="23" min="0" /> <span id="date-adjuster-value"></span>
        </div>
        <script>
            var ranges = {
                YEAR: {
                    max: 9
                },
                MONTH: {
                    max: 11
                },
                DAY: {
                    max: 30
                },
                HOUR: {
                    max: 23
                },
                MINUTE: {
                    max: 59
                }
            };

            var states = {{ states | json_encode | raw }};
            var selectElement = document.getElementById('type');
            var spinElement = document.getElementById('type-spin');
            var rangeElement = document.getElementById('date-adjuster');

            var prevIdx;

            selectElement.onchange=fetchData;
            fetchData();

            function calculateRangeLabel() {

            }

            function fetchData() {
                var idx = selectElement.selectedIndex;
                if (prevIdx === idx) {
                  return;
                }
                var options = selectElement.getElementsByTagName('OPTION');
                if (idx >= 0) {
                  spinElement.style.visibility = 'visible';
                  var selectedOption = options[idx];
                  var selectedValue = selectedOption.value;

                  fetch('{{ path('dtc_queue_timings') }}?type=' + selectedValue).then(function(response) {
                    if (response.status === 200) {
                      response.json().then(function (data) {
                        renderTrends(data, selectedValue.toString().toLowerCase());
                        spinElement.style.visibility = 'hidden';
                      });
                    }
                  });
                }
            }

            function renderTrends(data, label) {
                var datasets = [];
                var curLabel;
                var curColor;
                var timingsData;
                for (var state in states) {
                    if (states.hasOwnProperty(state)) {
                        curLabel = states[state].label;
                        curColor = states[state].color;
                        timingsData = data['timings_data_' + state];
                        datasets.push(
                            {
                                label: curLabel,
                                backgroundColor: curColor,
                                borderColor: curColor,
                                data: timingsData,
                                fill: false
                            }
                        );
                    }
                }
                var red = 'rgb(255, 99, 132)';
                var canvasEle = document.getElementById('trends');
                var chart = new Chart(canvasEle, {
                    type: 'line',
                    data: {
                      labels: data['timings_dates'],
                      datasets: datasets
                    },
                options: {
                  responsive: true,
                  title: {
                    display: true,
                    text: 'Job Timings'
                  },
                  tooltips: {
                    mode: 'index',
                    intersect: true
                  },
                  scales: {
                    xAxes: [
                      {
                        display: true,
                        scaleLabel: {
                          display: true,
                          labelString: label
                        }
                      }
                    ],
                    yAxes: [{
                      ticks: {
                        beginAtZero: true
                      },
                      display: true,
                      scaleLabel: {
                        display: true,
                        labelString: 'Count'
                      }
                    }]
                  }
                }
              });
            }
        </script>
    {% endif %}
{% endblock %}
